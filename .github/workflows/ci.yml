name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12', '3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y hunspell hunspell-en-us libhunspell-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Install Node.js dependencies
      run: npm ci

    - name: Lint frontend (JavaScript)
      run: npm run lint:frontend

    - name: Lint backend (Python)
      run: npm run lint:backend

    - name: Check code formatting
      run: npm run format:check

    - name: Test Python backend imports
      run: python -c "import main; print('Backend imports successfully')"

    - name: Run JavaScript tests
      run: npm run test:coverage

    - name: Run Python tests
      run: |
        python -m pytest test_main.py -v --cov=. --cov-report=xml --cov-report=term-missing

    - name: Start application (smoke test)
      run: |
        timeout 30s python main.py &
        sleep 10
        curl -f http://localhost:8000/ || exit 1
        echo "âœ… Application started successfully"

    - name: Upload frontend coverage reports
      if: success()
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: frontend
        name: frontend-coverage-${{ matrix.python-version }}
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload backend coverage reports
      if: success()
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: backend
        name: backend-coverage-${{ matrix.python-version }}
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  security:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install security scanning tools
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Run safety check on dependencies
      run: safety check -r requirements.txt --json --output safety-report.json || true

    - name: Run bandit security scan
      run: bandit -r . -f json -o bandit-report.json || true

    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json